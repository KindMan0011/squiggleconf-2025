#!/usr/bin/env bash
# SquiggleConf 2025 Project Configuration

# Project identification
export PROJECT_NAME="squiggleconf-2025"
export PROJECT_ROOT="$(pwd)"

# Emacs configuration for Scheme development
export EMACS_CONFIG="${PROJECT_ROOT}/${PROJECT_NAME}.el"

# Set up tmux session name based on project
export TMUX_SESSION_NAME="${PROJECT_NAME}"

# Function to start project-specific Emacs in tmux
start_project_emacs() {
  local session_name="${TMUX_SESSION_NAME:-$PROJECT_NAME}"
  local emacs_config="${EMACS_CONFIG:-$PROJECT_ROOT/$PROJECT_NAME.el}"
  
  # Check if tmux session already exists
  if tmux has-session -t "$session_name" 2>/dev/null; then
    echo "Tmux session '$session_name' already exists. Attaching..."
    tmux attach-session -t "$session_name"
  else
    echo "Starting new tmux session '$session_name' with project Emacs..."
    tmux new-session -d -s "$session_name" "emacs -nw -Q -l $emacs_config"
    
    # Get the TTY of the tmux pane for reference
    local pane_tty=$(tmux list-panes -t "$session_name" -F "#{pane_tty}")
    echo "Emacs running in tmux session '$session_name' on TTY: $pane_tty"
    
    # Attach to the session
    tmux attach-session -t "$session_name"
  fi
}

# Export the function for use in subshells
export -f start_project_emacs

# Optional: Set up Guile/Scheme environment variables
export GUILE_LOAD_PATH="${PROJECT_ROOT}:${GUILE_LOAD_PATH}"
export GUILE_LOAD_COMPILED_PATH="${PROJECT_ROOT}:${GUILE_LOAD_COMPILED_PATH}"

# Inform user about available commands
echo "Project: ${PROJECT_NAME}"
echo "Root: ${PROJECT_ROOT}"
echo ""
echo "Available commands:"
echo "  start_project_emacs - Start Emacs with project config in tmux session"
echo "  make tmux-emacs    - Alternative way to start Emacs in tmux"